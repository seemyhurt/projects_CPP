// englerr.cpp
// контроль ввода данных для класса английских расстояний
#include <iostream>
#include <string>
#include <cstdlib>      // для atoi(), atof()
using namespace std;
int isFeet(wstring);     //объявление
///////////////////////////////////////////////////////////
class Distance          // Класс английских расстояний
{
private:
    int feet;
    float inches;
public:
    Distance()                 // конструктор (без аргументов)
    {
        feet = 0; inches = 0.0;
    }
    Distance(int ft, float in) // конструктор (2 арг.)
    {
        feet = ft; inches = in;
    }
    void showdist()            // вывод расстояния
    {
        wcout << feet << L"\'-" << inches << '\"';
    }
    void getdist();            // запросить длину 
                               // у пользователя
};
//---------------------------------------------------------
void Distance::getdist()    // получение длины от пользователя
{
    wstring instr;             // для входной строки

    while (true)               // цикл, пока футы 
                              // не будут правильными
    {
        wcout << L"\n\nВведите футы: ";
        wcin.unsetf(ios::skipws);// не пропускать
                                // разделители
        wcin >> instr;           // получить футы как строку
        if (isFeet(instr))     // правильное значение?
        {        //да
            wcin.ignore(10, '\n'); // съесть символы,
                                  // включая разделитель строк
            feet = _wtoi(instr.c_str()); // перевести
                                          // значение в целочисленное
            break;                // выход из цикла 'while'
        }                     // нет, не целое
        wcin.ignore(10, '\n');   // съесть символы, включая
                                // разделитель строк
        wcout << L"Футы должны быть целыми < 1000\n";
    }  //конец цикла while для футов

    while (true)               // цикл проверки дюймов
    {
        wcout << L"Введите дюймы: ";
        wcin.unsetf(ios::skipws);// не пропускать
                                // разделители
        wcin >> inches;          // получить дюймы (тип float)
        if (inches >= 12.0 || inches < 0.0)
        {
            wcout << L"Дюймы должны быть между 0.0 и 11.99\n";
            wcin.clear(ios::failbit); //"искусственно"
                                     //установить флаг ошибки
        }
        if (wcin.good())        // все ли хорошо с wcin
        {  //(обычно вводят не цифры)
            wcin.ignore(10, '\n'); // съесть разделитель
            break;              // Ввод корректный, выйти из 'while'
        }
        wcin.clear();          // ошибка; очистить статус ошибки
        wcin.ignore(10, '\n'); // съесть символы с разделителем
        wcout << L"Неверно введены дюймы\n";  //заново
    }  //конец while для дюймов
}
//---------------------------------------------------------
int isFeet(wstring str)      // true если введена строка
{                         // с правильным значением футов
    auto slen = str.size();    // получить длину
    if (slen == 0 || slen > 5)   // не было или слишком много
                              // данных
        return 0;               // не целое
    for (int j = 0; j < slen; j++) // проверить каждый символ
                              // если не цифра или минус
        if ((str[j] < '0' || str[j] > '9') && str[j] != '-')
            return 0;             // строка неправильных футов
    double n = _wtof(str.c_str()); // перевод в double
    if (n < -999.0 || n>999.0)  // вне допустимых значений?
        return 0;                // если да, неправильные футы
    return 1;                  // правильные футы
}
///////////////////////////////////////////////////////////
int main()
{
    Distance d;             //создать объект Distance
    wchar_t ans;
    do
    {
        d.getdist();          // получить его значение
        wcout << L"\nРасстояние = L";
        d.showdist();         // вывести его
        wcout << L"\nЕще раз (y/n)? ";
        wcin >> ans;
        wcin.ignore(10, '\n'); // съесть символы и
                              // разделитель
    } while (ans != 'n');  // цикл до 'n'
    return 0;
}
